#! python3
# -*- coding: utf-8 -*-

# Тестирование урока из http://younglinux.info/tkinter/tkinter.php

from tkinter import * # импорт ткинтера

import time

from utils import * # импорт моих коммандс


def printer(event):
    print("Yet another 'Hello World!'")


root = Tk() # В современных операционных системах любое пользовательское приложение
# заключено в окно, которое можно назвать главным, т.к. в нем располагаются все
# остальные виджеты. Объект окна верхнего уровня создается при обращении к классу
# Tk модуля tkinter. Переменную связанную с объектом-окном принято называть root.

# Допустим в окне будет располагаться всего одна кнопка. Кнопка создается при обращении
# к классу Button модуля tkinter. Объект кнопка связывается с какой-нибудь переменной.
# У класса Button (как и всех остальных классов, за исключением Tk) есть обязательный п
# араметр — объект, которому кнопка принадлежит (кнопка не может "быть ничейной"). Пока
# у нас есть единственное окно (root), оно и будет аргументом, передаваемым в класс при
# создании объекта-кнопки:

btn_Test1 = Button(root)

# У кнопки много свойств: размер, цвет фона и надписи и др. Мы рассмотрим их на
# следующем уроке. Пока же установим всего одно свойство — текст надписи (text):

btn_Test1["text"] = "btn_Test1 text"

# Многообразие событий и способов их обработки будет рассмотрено на следующих уроках.
# Здесь же просто коснемся данного вопроса в связи с потребностью.
# Что же будет делать кнопка и в какой момент она это будет делать? Предположим, что
# задача кнопки вывести какое-нибудь сообщение в поток вывода, используя функцию print.
# Делать она это будет при нажатии на нее левой кнопкой мыши.
# Действия (алгоритм), которые происходят при том или ином событии, могут быть
# достаточно сложным. Поэтому часто их оформляют в виде функции, а затем вызывают, когда
# они понадобятся. Пусть у нас печать на экран будет оформлена в виде функции printer:
### Функция printer находится в начале кода

btn_Test1.bind("<Button-1>", printer) # задание на левую (первую) кнопку мыши функции

# Если вы заметите, то в любом приложении виджеты не разбросаны по окну как попало, а
# хорошо организованы, интерфейс продуман до мелочей и обычно подчинен определенным
# стандартам. До стандартов нам далеко, нужно просто кнопку как-то отобразить в окне.
# Самый простой способ — это использование метода pack.

btn_Test1.pack()
btn_Test1

# Если не вставить эту строчку кода, то кнопка в окне так и не появится, хотя она есть
# в программе.

# Ну и наконец, главное окно тоже не появится, пока не будет вызван специальный метод
# mainloop:

root.mainloop()

# Данная строчка кода должна быть всегда в конце скрипта!

### То же самое, но компактно:
# from tkinter import *
#
#
# def printer(event):
#     print("Как всегда очередной 'Hello World!'")
#
#
# root = Tk()
# but = Button(root)
# but["text"] = "Печать"
# but.bind("<Button-1>", printer)
#
# but.pack()
# root.mainloop()